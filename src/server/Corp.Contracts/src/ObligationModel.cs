using System.ComponentModel.DataAnnotations;

namespace Corp;

/// <summary>
/// Represents an obligation, task, or compliance requirement in the system.
/// </summary>
public class ObligationModel
{
    /// <summary>
    /// The obligation ID.
    /// </summary>
    [Display(Name = "ID")]
    public long Id { get; set; }

    /// <summary>
    /// The organization this obligation belongs to.
    /// </summary>
    [Display(Name = "Organization ID")]
    [Required]
    public long OrganizationId { get; set; }

    /// <summary>
    /// The entity this obligation is associated with (optional).
    /// </summary>
    [Display(Name = "Entity ID")]
    public long? EntityId { get; set; }

    /// <summary>
    /// The person this obligation is assigned to (optional).
    /// </summary>
    [Display(Name = "Person ID")]
    public long? PersonId { get; set; }

    /// <summary>
    /// The obligation title/subject.
    /// </summary>
    [Display(Name = "Title")]
    [Required]
    [StringLength(200)]
    public string Title { get; set; } = null!;

    /// <summary>
    /// The obligation description.
    /// </summary>
    [Display(Name = "Description")]
    [StringLength(2000)]
    public string? Description { get; set; }

    /// <summary>
    /// The obligation type (Filing, Renewal, Compliance, etc.).
    /// </summary>
    [Display(Name = "Type")]
    [Required]
    [StringLength(50)]
    public string Type { get; set; } = null!;

    /// <summary>
    /// The obligation category (Annual Report, Tax Filing, License Renewal, etc.).
    /// </summary>
    [Display(Name = "Category")]
    [StringLength(100)]
    public string? Category { get; set; }

    /// <summary>
    /// The obligation status (Pending, In Progress, Completed, Overdue, etc.).
    /// </summary>
    [Display(Name = "Status")]
    [Required]
    [StringLength(50)]
    public string Status { get; set; } = "Pending";

    /// <summary>
    /// The obligation priority (Low, Medium, High, Critical).
    /// </summary>
    [Display(Name = "Priority")]
    [StringLength(20)]
    public string? Priority { get; set; }

    /// <summary>
    /// The due date for this obligation.
    /// </summary>
    [Display(Name = "Due Date")]
    public DateTime? DueDate { get; set; }

    /// <summary>
    /// The completion date (when status is Completed).
    /// </summary>
    [Display(Name = "Completion Date")]
    public DateTime? CompletionDate { get; set; }

    /// <summary>
    /// The recurrence pattern (None, Annual, Quarterly, Monthly, etc.).
    /// </summary>
    [Display(Name = "Recurrence")]
    [StringLength(50)]
    public string? Recurrence { get; set; }

    /// <summary>
    /// The recurrence interval (e.g., 1 for every 1 year, 2 for every 2 years).
    /// </summary>
    [Display(Name = "Recurrence Interval")]
    public int? RecurrenceInterval { get; set; }

    /// <summary>
    /// The next due date (calculated from recurrence).
    /// </summary>
    [Display(Name = "Next Due Date")]
    public DateTime? NextDueDate { get; set; }

    /// <summary>
    /// The jurisdiction/state this obligation applies to.
    /// </summary>
    [Display(Name = "Jurisdiction")]
    [StringLength(2)]
    public string? Jurisdiction { get; set; }

    /// <summary>
    /// The regulatory authority (Secretary of State, IRS, etc.).
    /// </summary>
    [Display(Name = "Authority")]
    [StringLength(100)]
    public string? Authority { get; set; }

    /// <summary>
    /// The filing fee or cost associated with this obligation.
    /// </summary>
    [Display(Name = "Fee")]
    public decimal? Fee { get; set; }

    /// <summary>
    /// The currency for the fee.
    /// </summary>
    [Display(Name = "Currency")]
    [StringLength(3)]
    public string? Currency { get; set; } = "USD";

    /// <summary>
    /// Whether this obligation was generated by AI.
    /// </summary>
    [Display(Name = "AI Generated")]
    public bool IsAiGenerated { get; set; } = false;

    /// <summary>
    /// The AI confidence score for this obligation (0-100).
    /// </summary>
    [Display(Name = "AI Confidence")]
    [Range(0, 100)]
    public decimal? AiConfidence { get; set; }

    /// <summary>
    /// The source document that generated this obligation (if applicable).
    /// </summary>
    [Display(Name = "Source Document ID")]
    public long? SourceDocumentId { get; set; }

    /// <summary>
    /// Whether this obligation is active.
    /// </summary>
    [Display(Name = "Active")]
    public bool IsActive { get; set; } = true;

    /// <summary>
    /// Notes about this obligation.
    /// </summary>
    [Display(Name = "Notes")]
    [StringLength(2000)]
    public string? Notes { get; set; }

    /// <summary>
    /// The completion notes (when status is Completed).
    /// </summary>
    [Display(Name = "Completion Notes")]
    [StringLength(2000)]
    public string? CompletionNotes { get; set; }
}

/// <summary>
/// Detailed obligation model with related entities and temporal tracking.
/// </summary>
public class ObligationDetailModel : ObligationModel, ITemporal
{
    /// <summary>
    /// The organization this obligation belongs to.
    /// </summary>
    public OrganizationModel Organization { get; set; } = null!;

    /// <summary>
    /// The entity this obligation is associated with.
    /// </summary>
    public EntityModel? Entity { get; set; }

    /// <summary>
    /// The person this obligation is assigned to.
    /// </summary>
    public PersonModel? Person { get; set; }

    /// <summary>
    /// The source document that generated this obligation.
    /// </summary>
    public DocumentModel? SourceDocument { get; set; }

    #region ITemporal

    /// <summary>
    /// The created timestamp.
    /// </summary>
    [Display(Name = "Created at")]
    [Description("The date and time this record was created, in the format defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z.")]
    public DateTimeOffset CreatedAt { get; set; }

    /// <summary>
    /// The updated timestamp.
    /// </summary>
    [Display(Name = "Updated at")]
    [Description("The date and time this record was last updated, in the format defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z.")]
    public DateTimeOffset UpdatedAt { get; set; }

    /// <summary>
    /// The deleted timestamp.
    /// </summary>
    [Display(Name = "Deleted at")]
    [Description("The date and time this record was deleted, or null, in the format defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z.")]
    public DateTimeOffset? DeletedAt { get; set; }

    #endregion ITemporal
}
